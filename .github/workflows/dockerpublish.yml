name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: sysblokbot

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Python Style Checker
        uses: andymckay/pycodestyle-action@0.1.3
        
      - name: Python Pytest Github Action
        uses: fylein/python-pytest-github-action@v2
        with:
          args: pip3 install -e . && pip3 install -r requirements.txt && pytest

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Publish to Github Packages Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        with:
          name: ${{ github.repository }}/${{ env.IMAGE_NAME }}
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: Dockerfile
          tags: latest

      - name: Deploy package to digitalocean
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        with:
          host: ${{ secrets.MASTER_HOST }}
          username: ${{ secrets.MASTER_DO_USER }}
          passphrase: ${{ secrets.MASTER_DO_SSH_KEY_PASSWORD }}
          key: ${{ secrets.MASTER_DO_SSH_KEY }}
          port: ${{ secrets.MASTER_PORT }}
          envs: GITHUB_USERNAME, GITHUB_TOKEN, IMAGE_NAME
          script: |
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker rmi $(docker images -q)
            docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
            docker run -dit docker.pkg.github.com/${{ github.actor }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:latest
